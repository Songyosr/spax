% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measure_access.R
\name{compute_2sfca}
\alias{compute_2sfca}
\title{Calculate Two-Step Floating Catchment Area (2SFCA) accessibility scores}
\usage{
compute_2sfca(
  demand,
  supply,
  distance,
  decay_params = list(method = "gaussian", sigma = 30),
  demand_normalize = "identity",
  id_col = NULL,
  supply_cols = NULL,
  indicator_names = NULL,
  full_output = FALSE
)
}
\arguments{
\item{demand}{SpatRaster representing spatial distribution of demand}

\item{supply}{vector, matrix, or data.frame containing supply capacity values.
If using an sf object, please use st_drop_geometry() first.}

\item{distance}{SpatRaster stack of travel times/distances to facilities}

\item{decay_params}{List of parameters for decay function}

\item{demand_normalize}{Character specifying normalization method: "identity", "standard", or "semi"}

\item{id_col}{Character; column name for facility IDs if supply is a data.frame}

\item{supply_cols}{Character vector; names of supply columns if supply is a data.frame}

\item{indicator_names}{Character vector; custom names for output accessibility layers.
If NULL, will use "A_" prefix with supply column names.}

\item{full_output}{Logical; whether to return intermediate calculations}
}
\value{
SpatRaster of 2SFCA accessibility scores or list with full results
}
\description{
Calculate Two-Step Floating Catchment Area (2SFCA) accessibility scores
}
\examples{
# Create sample data
library(terra)

# Create a simple demand raster
r <- rast(nrows=10, ncols=10, xmin=0, xmax=10, ymin=0, ymax=10)
values(r) <- runif(ncell(r)) * 100  # Random population values
demand <- r

# Create sample supply data
supply <- data.frame(
  location_id = c("A", "B", "C"),
  doctors = c(10, 15, 20),
  nurses = c(20, 25, 30)
)

# Create distance raster stack
distance <- rast(replicate(3, r))  # 3 layers for 3 facilities
values(distance) <- runif(ncell(distance) * nlyr(distance)) * 10  # Random distances
names(distance) <- supply$location_id

# Calculate accessibility
result <- compute_2sfca(
  demand = demand,
  supply = supply,
  distance = distance,
  supply_cols = c("doctors", "nurses"),
  decay_params = list(method = "gaussian", sigma = 30),
  demand_normalize = "identity",
  id_col = "location_id"
)
}
