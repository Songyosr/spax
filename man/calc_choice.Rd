% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01-calc_choice.R
\name{calc_choice}
\alias{calc_choice}
\title{Compute Spatial Choice Probabilities}
\usage{
calc_choice(weights, attractiveness = NULL, alpha = 1, a0 = 0, snap = FALSE)
}
\arguments{
\item{weights}{Multi-layer SpatRaster of spatial weights (e.g., from calc_decay)}

\item{attractiveness}{Optional numeric vector of facility attractiveness values}

\item{alpha}{Numeric parameter for attractiveness sensitivity (default = 1)}

\item{a0}{Non-negative numeric value representing outside option weight (default = 0)}

\item{snap}{Logical; if TRUE, avoid input validation. PS. snap is a performance optimization for internal use}
}
\value{
SpatRaster stack of choice probabilities (layers sum to 1 at each location)
}
\description{
Converts spatial weights to choice probabilities. When used with attractiveness values,
implements Huff model logic. Without attractiveness, behaves like standard weight
normalization.
}
\examples{
\dontrun{
# Calculate decay weights
w <- calc_decay(distance, method = "gaussian", sigma = 30)

# Basic usage (equivalent to calc_normalize)
p1 <- calc_choice(w)

# With Huff model attractiveness
attr <- c(100, 150, 80)  # for 3 facilities
p2 <- calc_choice(w, attractiveness = attr, alpha = 1.5)

# With outside option
p3 <- calc_choice(w, attractiveness = attr, a0 = 0.1)
}
}
