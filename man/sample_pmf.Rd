% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_pmf.R
\name{sample_pmf}
\alias{sample_pmf}
\title{Sample Points from Probability Surface}
\usage{
sample_pmf(
  x,
  n = NULL,
  size = NULL,
  prob = NULL,
  method = "binomial",
  method_args = list(),
  as_raster = TRUE,
  as_points = FALSE,
  as_df = FALSE,
  seed = NULL,
  ...
)
}
\arguments{
\item{x}{SpatRaster representing spatial distribution (PMF or raw density values)}

\item{n}{Integer or NULL. Fixed number of samples for deterministic sampling.
If specified, overrides probabilistic sampling parameters.}

\item{size}{Integer or NULL. Population size parameter for probability distributions.
If NULL and input is density, will be calculated automatically from the data.}

\item{prob}{Numeric between 0 and 1. Probability parameter for sampling methods.
Represents rate or probability of occurrence (e.g., disease prevalence,
detection probability).}

\item{method}{Character string or function specifying how sample size is determined:
- NULL: Uses fixed n parameter
- "poisson": Random size with mean = size * prob
- "binomial": Random size from binomial(size, prob)
- "nbinom": Random size from negative binomial(size, prob)
- custom function: Must return single numeric value}

\item{method_args}{List of additional parameters for sampling method}

\item{as_raster}{Logical. If TRUE, returns a SpatRaster (default)}

\item{as_points}{Logical. If TRUE, returns a SpatVector of points}

\item{as_df}{Logical. If TRUE, returns a data.frame}

\item{seed}{Integer for random seed (optional)}

\item{...}{Additional arguments passed to spatSample()}
}
\value{
Depending on output flags:
        - SpatRaster if as_raster = TRUE
        - SpatVector if as_points = TRUE
        - data.frame if as_df = TRUE
        - matrix if all are FALSE
}
\description{
A wrapper function around terra::spatSample() that implements a two-step sampling process:

1. Sample Size Determination:
   - Deterministic: Specify exact number of samples via n parameter
   - Probabilistic: Generate random sample size using probability distributions
     and population parameters (size, prob). Useful for Monte Carlo simulations
     modeling variability in occurrence rates (e.g., disease cases, species observations)

2. Spatial Sampling:
   - Uses terra::spatSample() to generate spatially distributed points
   - Sampling probability proportional to PMF values
   - Automatically converts density data to PMF if needed
}
\examples{
# Example 1: Deterministic sampling - exactly 100 points
samples1 <- sample_pmf(pop_density, n = 100)

# Example 2: Disease case simulation using population size
# Total population from density data, with disease prevalence
disease_cases <- sample_pmf(pop_density,
                           prob = 0.001,  # disease prevalence
                           method = "binomial")  # size calculated from data

# Example 3: Species observation with pre-computed habitat PMF
# Note: habitat_pmf is already a probability mass function (sums to 1)
observations <- sample_pmf(habitat_pmf,
                          size = 1000,    # number of trials
                          prob = 0.3,     # success probability
                          method = "nbinom")
}
