% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03-e2sfca.R
\name{compute_access}
\alias{compute_access}
\title{Calculate spatial accessibility using weighted surfaces}
\usage{
compute_access(
  demand,
  supply,
  demand_weights,
  access_weights,
  id_col = NULL,
  supply_cols = NULL,
  indicator_names = NULL,
  full_output = FALSE
)
}
\arguments{
\item{demand}{SpatRaster representing spatial distribution of demand}

\item{supply}{vector, matrix, or data.frame containing supply capacity values.
If using an sf object, please use st_drop_geometry() first.}

\item{demand_weights}{Multi-layer SpatRaster of demand-side weights}

\item{access_weights}{Multi-layer SpatRaster of accessibility-side weights}

\item{id_col}{Character; column name for facility IDs if supply is a data.frame}

\item{supply_cols}{Character vector; names of supply columns if supply is a data.frame}

\item{indicator_names}{Character vector; custom names for output accessibility layers.
If NULL, will use "A_" prefix with supply column names.}

\item{full_output}{Logical; whether to return intermediate calculations}
}
\value{
SpatRaster of accessibility scores or list with full results if full_output=TRUE
}
\description{
General-purpose function to calculate spatial accessibility by combining
demand-side and supply-side weighted distributions. Supports multiple
supply measures and flexible weight specifications.
}
\examples{
\dontrun{
# Basic usage with supply columns
compute_access(demand, supply, weights,
  supply_cols = c("doctors", "nurses")
)

# With custom indicator names
compute_access(demand, supply, weights,
  supply_cols = c("doctors", "nurses"),
  indicator_names = c("physician_access", "nurse_access")
)
}
}
\seealso{
\code{\link{spax_e2sfca}} for specific two-step floating catchment area implementation
\code{\link{calc_decay}} for generating weight surfaces
\code{\link{gather_demand}} for demand calculation
\code{\link{spread_weighted}} for accessibility distribution
}
